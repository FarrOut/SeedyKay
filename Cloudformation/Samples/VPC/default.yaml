Resources:
  Vpc8378EB38:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/Resource
  VpcPublicSubnet1Subnet5C2D37C4:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc8378EB38
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Public
        - Key: 'aws-cdk:subnet-type'
          Value: Public
        - Key: Name
          Value: VpcStackStack/Vpc/PublicSubnet1
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable6C95E38E:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc8378EB38
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc/PublicSubnet1
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociation97140677:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref VpcPublicSubnet1RouteTable6C95E38E
      SubnetId: !Ref VpcPublicSubnet1Subnet5C2D37C4
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute3DA9E72A:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref VpcPublicSubnet1RouteTable6C95E38E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet1EIPD7E02669:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc/PublicSubnet1
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet1/EIP
  VpcPublicSubnet1NATGateway4D7517AA:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref VpcPublicSubnet1Subnet5C2D37C4
      AllocationId: !GetAtt
        - VpcPublicSubnet1EIPD7E02669
        - AllocationId
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc/PublicSubnet1
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet1/NATGateway
  VpcPublicSubnet2Subnet691E08A3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc8378EB38
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Public
        - Key: 'aws-cdk:subnet-type'
          Value: Public
        - Key: Name
          Value: VpcStackStack/Vpc/PublicSubnet2
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet2/Subnet
  VpcPublicSubnet2RouteTable94F7E489:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc8378EB38
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc/PublicSubnet2
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet2/RouteTable
  VpcPublicSubnet2RouteTableAssociationDD5762D8:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref VpcPublicSubnet2RouteTable94F7E489
      SubnetId: !Ref VpcPublicSubnet2Subnet691E08A3
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet2/RouteTableAssociation
  VpcPublicSubnet2DefaultRoute97F91067:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref VpcPublicSubnet2RouteTable94F7E489
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet2/DefaultRoute
  VpcPublicSubnet2EIP3C605A87:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc/PublicSubnet2
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet2/EIP
  VpcPublicSubnet2NATGateway9182C01D:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref VpcPublicSubnet2Subnet691E08A3
      AllocationId: !GetAtt
        - VpcPublicSubnet2EIP3C605A87
        - AllocationId
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc/PublicSubnet2
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PublicSubnet2/NATGateway
  VpcPrivateSubnet1Subnet536B997A:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc8378EB38
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Private
        - Key: 'aws-cdk:subnet-type'
          Value: Private
        - Key: Name
          Value: VpcStackStack/Vpc/PrivateSubnet1
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PrivateSubnet1/Subnet
  VpcPrivateSubnet1RouteTableB2C5B500:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc8378EB38
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc/PrivateSubnet1
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PrivateSubnet1/RouteTable
  VpcPrivateSubnet1RouteTableAssociation70C59FA6:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref VpcPrivateSubnet1RouteTableB2C5B500
      SubnetId: !Ref VpcPrivateSubnet1Subnet536B997A
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PrivateSubnet1/RouteTableAssociation
  VpcPrivateSubnet1DefaultRouteBE02A9ED:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref VpcPrivateSubnet1RouteTableB2C5B500
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref VpcPublicSubnet1NATGateway4D7517AA
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PrivateSubnet1/DefaultRoute
  VpcPrivateSubnet2Subnet3788AAA1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc8378EB38
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Private
        - Key: 'aws-cdk:subnet-type'
          Value: Private
        - Key: Name
          Value: VpcStackStack/Vpc/PrivateSubnet2
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PrivateSubnet2/Subnet
  VpcPrivateSubnet2RouteTableA678073B:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc8378EB38
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc/PrivateSubnet2
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PrivateSubnet2/RouteTable
  VpcPrivateSubnet2RouteTableAssociationA89CAD56:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref VpcPrivateSubnet2RouteTableA678073B
      SubnetId: !Ref VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PrivateSubnet2/RouteTableAssociation
  VpcPrivateSubnet2DefaultRoute060D2087:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref VpcPrivateSubnet2RouteTableA678073B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref VpcPublicSubnet2NATGateway9182C01D
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/PrivateSubnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: VpcStackStack/Vpc
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref Vpc8378EB38
      InternetGatewayId: !Ref VpcIGWD7BA715C
    Metadata:
      'aws:cdk:path': VpcStackStack/Vpc/VPCGW
  CDKMetadata:
    Type: 'AWS::CDK::Metadata'
    Properties:
      Analytics: >-
        v2:deflate64:H4sIAAAAAAAA/02OzQ6CMBCEn4V7qdIY74QY48UQMFxNKWtcflpDtxBDeHdBVDzNt5PJ7AguBN96sre+Kiq/xpwPKUlVscm6ghJ8yB6KRTedxRGLXV6jSl2ugWZvpcQ4govMa1j91QutNQolodG/8AyHUzzLWdJREvTyyeIWuwnX4pMmaCf+BpYlnyukaeq9AU0jS8Aa16p37z9HRhc4fx6ZNgXw0m66YM+DHRdeaRH91mnCBniy6AvBzrdvEgEAAA==
    Metadata:
      'aws:cdk:path': VpcStackStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable: !Or
    - !Or
      - !Equals
        - !Ref 'AWS::Region'
        - af-south-1
      - !Equals
        - !Ref 'AWS::Region'
        - ap-east-1
      - !Equals
        - !Ref 'AWS::Region'
        - ap-northeast-1
      - !Equals
        - !Ref 'AWS::Region'
        - ap-northeast-2
      - !Equals
        - !Ref 'AWS::Region'
        - ap-south-1
      - !Equals
        - !Ref 'AWS::Region'
        - ap-southeast-1
      - !Equals
        - !Ref 'AWS::Region'
        - ap-southeast-2
      - !Equals
        - !Ref 'AWS::Region'
        - ca-central-1
      - !Equals
        - !Ref 'AWS::Region'
        - cn-north-1
      - !Equals
        - !Ref 'AWS::Region'
        - cn-northwest-1
    - !Or
      - !Equals
        - !Ref 'AWS::Region'
        - eu-central-1
      - !Equals
        - !Ref 'AWS::Region'
        - eu-north-1
      - !Equals
        - !Ref 'AWS::Region'
        - eu-south-1
      - !Equals
        - !Ref 'AWS::Region'
        - eu-west-1
      - !Equals
        - !Ref 'AWS::Region'
        - eu-west-2
      - !Equals
        - !Ref 'AWS::Region'
        - eu-west-3
      - !Equals
        - !Ref 'AWS::Region'
        - me-south-1
      - !Equals
        - !Ref 'AWS::Region'
        - sa-east-1
      - !Equals
        - !Ref 'AWS::Region'
        - us-east-1
      - !Equals
        - !Ref 'AWS::Region'
        - us-east-2
    - !Or
      - !Equals
        - !Ref 'AWS::Region'
        - us-west-1
      - !Equals
        - !Ref 'AWS::Region'
        - us-west-2
Parameters:
  BootstrapVersion:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert: !Not
          - 'Fn::Contains':
              - - '1'
                - '2'
                - '3'
                - '4'
                - '5'
              - !Ref BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.
