
# aws cloudformation deploy --stack-name eks --template-file template.yaml --capabilities CAPABILITY_IAM --parameter-overrides VPC=vpc-xxxxxxxxxxx Subnets=subnet-xxxxxxxxxxxxx,subnet-xxxxxxxxxxxx PublicAccessCidrs="0.0.0.0/0"

Parameters:
  k8sVersion:
    Type: String
    Default: 1.27
    AllowedValues:
      - 1.27
  # SecurityGroups:
  #   Description: "Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use that allow communication between your nodes and the Kubernetes control plane."
  #   Type: List<AWS::EC2::SecurityGroup::Id>
  VPC:
    Type: AWS::EC2::VPC::Id    
  Subnets:
    Description: "Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane."
    Type: List<AWS::EC2::Subnet::Id>
  PublicAccessCidrs:
    Description: "The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is 0.0.0.0/0. If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks."
    # Default: [ "0.0.0.0/0" ]
    Type: List<String>
  EnableEndpointPrivateAccess:
    Description: "Set this value to true to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is false, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that publicAccessCidrs includes the necessary CIDR blocks for communication with the nodes or Fargate pods."
    Type: String
    Default: 'false'
    AllowedValues:
      - 'false'
      - 'true'
  EnableEndpointPublicAccess:
    Description: "Set this value to false to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is true, which enables public access for your Kubernetes API server."
    Type: String
    Default: 'true'
    AllowedValues:
      - 'false'
      - 'true'

Resources:
  Cluster:
    Type: AWS::EKS::Cluster
    Properties: 
      ResourcesVpcConfig: 
        SecurityGroupIds: 
          - !Ref ControlPlaneSecurityGroup
        SubnetIds: !Ref Subnets
        EndpointPublicAccess: !Ref EnableEndpointPublicAccess
        EndpointPrivateAccess: !Ref EnableEndpointPrivateAccess
        PublicAccessCidrs: !Ref PublicAccessCidrs     
      RoleArn: !GetAtt ServiceRole.Arn
      Version: !Ref k8sVersion

  ServiceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy


  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !Ref VPC              